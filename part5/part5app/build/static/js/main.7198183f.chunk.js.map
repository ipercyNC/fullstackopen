{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","axios","get","then","res","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"yOAWeA,EATF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACI,wBAAIC,UAAW,QACVJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCIjCK,EATM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EAAyB,KAEzB,yBAAKJ,UAAU,SACVI,ICWE,EAdA,WAEX,OADYC,IAAMC,IAHN,cAIDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAYhB,EATA,SAAAC,GAEX,OADYL,IAAMM,KARN,aAQoBD,GACrBH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAOhB,EAJA,SAACG,EAAIF,GAEhB,OADYL,IAAMQ,IAAN,UAbA,aAaA,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCRzBK,EAAS,WAMX,OACI,yBAAKC,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIN,6BACA,uGAiGGC,EA5FH,SAACC,GAAW,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEWF,mBAAS,iBAFpB,mBAEZG,EAFY,KAEHC,EAFG,OAGWJ,oBAAS,GAHpB,mBAGZK,EAHY,KAGHC,EAHG,OAIqBN,mBAAS,MAJ9B,mBAIZO,EAJY,KAIEC,EAJF,KAMnBC,qBAAU,WACNC,IAEKxB,MAAK,SAAAyB,GACFT,EAASS,QAElB,IAEH,IA6BMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAAtC,GAAI,OAAIA,EAAKG,aAqB9B,OACI,6BACI,qCAEA,kBAAC,EAAD,CAAcK,QAASwB,IAEvB,6BACI,4BAAQ1B,QAAS,kBAAMyB,GAAYD,KAAnC,QACUA,EAAU,YAAc,QAGtC,4BAzCJO,EAAYE,KAAI,SAAAvC,GAAI,OAChB,kBAAC,EAAD,CACIwC,IAAKxC,EAAKgB,GACVhB,KAAMA,EACNC,iBAAkB,kBA1BH,SAAAe,GACd,sCAAkCA,GAA3C,IACMhB,EAAO0B,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KAChC2B,EAAW,eAAQ3C,EAAR,CAAcG,WAAYH,EAAKG,YAEhDgC,EACYnB,EAAI2B,GACXhC,MAAK,SAAAiC,GACFjB,EAASD,EAAMa,KAAI,SAAAvC,GAAI,OAAIA,EAAKgB,KAAOA,EAAKhB,EAAO4C,SAEtDC,OAAM,SAAAC,GACHb,EAAgB,SAAD,OACFjC,EAAKK,QADH,sCAGf0C,YAAW,WACPd,EAAgB,QACjB,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAE1B,KAAOA,SASZgC,CAAmBhD,EAAKgB,WAwCpD,0BAAMiC,SAjCE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACf/C,QAASuB,EACTyB,MAAM,IAAIC,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,IAE/BtB,EACYiB,GACPzC,MAAK,SAAAiC,GACFjB,EAASD,EAAMgC,OAAOd,IACtBf,EAAW,SAuBX,2BACI8B,MAAO/B,EACPgC,SArBS,SAACV,GACtBrB,EAAWqB,EAAMW,OAAOF,UAsBhB,4BAAQG,KAAK,UAAb,SAGJ,kBAAC,EAAD,Q,MCvGZC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.7198183f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important ? 'make not important' : 'make important';\r\n    return (\r\n        <li className ='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    );\r\n};\r\nexport default Note;","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) return null;\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseUrl);\r\n    return req.then(res => res.data);\r\n};\r\n\r\nconst create = newObject => {\r\n    const req = axios.post(baseUrl, newObject);\r\n    return req.then(res => res.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const req = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return req.then(res => res.data);\r\n}\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update\r\n};","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Note from './components/Note';\r\nimport Notification from './components/Notification';\r\nimport noteService from './services/notes';\r\n\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    };\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst App = (props) => {\r\n    const [notes, setNotes] = useState([]);\r\n    const [newNote, setNewNote] = useState(\"a new note...\");\r\n    const [showAll, setShowAll] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        noteService\r\n            .getAll()\r\n            .then(initialNotes => {\r\n                setNotes(initialNotes);\r\n            })\r\n    }, []);\r\n\r\n    const toggleImportanceOf = id => {\r\n        const url = `http://localhost:3001/notes/${id}`;\r\n        const note = notes.find(n => n.id === id);\r\n        const changedNote = { ...note, important: !note.important };\r\n\r\n        noteService\r\n            .update(id, changedNote)\r\n            .then(returnedNote => {\r\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote));\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(\r\n                    `Note '${note.content}' was already removed from server`\r\n                );\r\n                setTimeout(() => {\r\n                    setErrorMessage(null);\r\n                }, 5000);\r\n                setNotes(notes.filter(n => n.id !== id));\r\n            });\r\n    };\r\n\r\n    const rows = () => \r\n        notesToShow.map(note =>\r\n            <Note\r\n                key={note.id}\r\n                note={note}\r\n                toggleImportance={() => toggleImportanceOf(note.id)}\r\n            />\r\n        );\r\n    const notesToShow = showAll ?\r\n        notes :\r\n        notes.filter(note => note.important);\r\n\r\n    const addNote = (event) => {\r\n        event.preventDefault();\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() > 0.5\r\n        }\r\n        noteService\r\n            .create(noteObject)\r\n            .then(returnedNote => {\r\n                setNotes(notes.concat(returnedNote));\r\n                setNewNote('');\r\n            });\r\n    };\r\n\r\n    const handleNoteChange = (event) => {\r\n        setNewNote(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Notes</h1>\r\n\r\n            <Notification message={errorMessage} />\r\n\r\n            <div>\r\n                <button onClick={() => setShowAll(!showAll)}>\r\n                    show {showAll ? 'important' : 'all'}\r\n                </button>\r\n            </div>\r\n            <ul>\r\n                {rows()}\r\n            </ul>\r\n            <form onSubmit={addNote}>\r\n                <input\r\n                    value={newNote}\r\n                    onChange={handleNoteChange}\r\n                />\r\n                <button type=\"submit\">save</button>\r\n            </form>\r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}