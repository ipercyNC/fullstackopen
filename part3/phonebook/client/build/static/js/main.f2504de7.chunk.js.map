{"version":3,"sources":["services/persons.js","components/Person.js","components/ErrorNotification.js","components/SuccessNotification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","res","data","newObject","post","id","put","console","log","req","delete","Person","name","number","deletePerson","onClick","ErrorNotification","message","className","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","SuccessNotification","App","useState","persons","setPersons","newName","setNewName","newSearch","setNewSearch","newNumber","setNewNumber","errorMessage","setErrorMessage","successMessage","setSuccessMessage","window","confirm","personsService","newPersons","filter","person","catch","error","setTimeout","useEffect","initialPersons","value","onChange","event","target","onSubmit","preventDefault","personObject","p","find","undefined","returnedPerson","concat","response","changedPerson","map","curr","type","toLowerCase","startsWith","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2504de7.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseUrl);\r\n    return req.then(res => res.data);\r\n}\r\n\r\nconst create = newObject => {\r\n    const req = axios.post(baseUrl, newObject);\r\n    return req.then(res => res.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const req = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return req.then(res => res.data);\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    console.log(`${baseUrl}/${id}`);\r\n    const req = axios.delete(`${baseUrl}/${id}`);\r\n    console.log(req);\r\n    return req.then(res => res.data);\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson };","import React from 'react';\r\n\r\n\r\nconst Person = ({ name, number, deletePerson }) => {\r\n    return (\r\n        <div>\r\n            {name} {number}\r\n            <button onClick={deletePerson}>delete</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Person;","import React from 'react';\r\n\r\nconst ErrorNotification = ({ message }) => {\r\n    const errorNotificationStyle = {\r\n        color: 'red',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    };\r\n    if (message === null) return null;\r\n    return (\r\n        <div className=\"error\" style={errorNotificationStyle}>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorNotification;","import React from 'react';\r\n\r\nconst SuccessNotification = ({ message }) => {\r\n    const successNotificationStyle = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    };\r\n\r\n    if (message === null) return null;\r\n    return (\r\n        <div className=\"success\" style={successNotificationStyle}>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuccessNotification;","import React, { useState, useEffect } from 'react';\nimport personsService from './services/persons';\nimport Person from './components/Person';\nimport ErrorNotification from './components/ErrorNotification';\nimport SuccessNotification from './components/SuccessNotification';\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newSearch, setNewSearch] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [successMessage, setSuccessMessage] = useState(null);\n\n    const rows = () => {\n        if (newSearch !== '') {\n            return persons.filter(person => { return person.name.toLowerCase().startsWith(newSearch.toLowerCase()) })\r\n                .map(person => {\r\n                    return <Person\r\n                        key={person.id}\r\n                        name={person.name}\r\n                        number={person.number}\r\n                        deletePerson={() => deletePerson(person.name, person.id)}\r\n                    />;\r\n                });\r\n        }\n        else\n            return persons.map(person => {\r\n                return <Person\r\n                            key={person.id}\r\n                            name={person.name}\r\n                            number={person.number}\r\n                            deletePerson={() => deletePerson(person.name, person.id)}\r\n                        />;\r\n            });\r\n    };\n    const deletePerson = (name, id) => {\n        const ans = window.confirm(`Delete ${name}?`);\n        if (ans === true) {\n            personsService\r\n                .deletePerson(id)\r\n                .then(res => {\r\n                    const newPersons = persons.filter(person => { return person.id !== id });\r\n                    setPersons(newPersons);\r\n                })\r\n                .catch(error => {\r\n                    setErrorMessage(`Information from ${name} has already been removed from server`);\r\n                    setTimeout(() => {\r\n                        setErrorMessage(null);\r\n                    }, 3000);\r\n                });\r\n        }\r\n    }\n    const onNameChange = (event) => {\r\n        setNewName(event.target.value);\r\n    }\n\n    const onSearchChange = (event) => {\n        setNewSearch(event.target.value);\r\n    }\n\n    const onNumberChange = (event) => {\n        setNewNumber(event.target.value);\r\n    }\n\n    useEffect(() => {\n        personsService\r\n            .getAll()\r\n            .then(initialPersons => {\r\n                setPersons(initialPersons);\r\n            })\r\n    }, []);\n\n    const addPerson = (event) => {\n        event.preventDefault();\n        const personObject = {\n            name: newName,\r\n            number: newNumber\r\n        };\n        //console.log(\"persons[newname] \", persons[newName]);\n        const p = persons.find(p => p.name === newName);\n        if (p === undefined) {\n            personsService\r\n                .create(personObject)\r\n                .then(returnedPerson => {\r\n                    setPersons(persons.concat(returnedPerson));\r\n                    setSuccessMessage(\r\n                        `Added ${returnedPerson.name}`);\r\n                    setTimeout(() => {\r\n                        setSuccessMessage(null);\r\n                    }, 3000);\r\n                    setNewName('');\r\n                    setNewNumber('');\r\n                })\r\n                .catch(error => {\r\n                    setErrorMessage(error.response.data.error);\r\n                    setTimeout(() => {\r\n                        setErrorMessage(null);\r\n                    }, 3000);\r\n                });\r\n        }\r\n        else {\r\n            const ans = window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`);\n            if (ans === true) {\r\n                const changedPerson = { ...p, number: newNumber };\r\n                personsService\r\n                    .update(p.id, changedPerson)\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.map(person =>\r\n                            person.id !== p.id ? person : changedPerson));\r\n                        setSuccessMessage(\r\n                            `Updated ${returnedPerson.name}`);\r\n                        setTimeout(() => {\r\n                            setSuccessMessage(null);\r\n                        }, 3000);\r\n                        setNewName('');\r\n                        setNewNumber('');\r\n                    })\r\n                    .catch(error => {\r\n                        setErrorMessage(`Information of ${newName} has already been removed from server`);\r\n                        setTimeout(() => {\r\n                            setErrorMessage(null);\r\n                        }, 3000);\r\n                        setPersons(persons.filter(curr => curr.id !== p.id));\r\n                    })\r\n            }\r\n        }\r\n        \r\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n\n            <ErrorNotification message={errorMessage} />\n            <SuccessNotification message={successMessage} />\n\n            filter shown with <input value={newSearch}\n                onChange={onSearchChange} />\n            <h2>add a new</h2>\n            <form onSubmit={addPerson}>\n                <div>\n                    name: <input value={newName}\n                        onChange={onNameChange} />\n                </div>\n                <div>\n                    number: <input value={newNumber}\n                        onChange={onNumberChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n            <h2>Numbers</h2>\n            {rows()}\n    </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}